112. Path Sum
这道题没啥可说的，自己搞懂16题就很简单
这是多说一下对于回溯（Backtrack）的一点感悟：
目前做的题目里有2道需要回溯，这些题的递归函数的参数都有其他值，而且这个值与节点有一定的对应关系（值随着节点的遍历而改变），再加上我们有往回遍历的情况，
当我们有这种数据时就需要考虑回溯了
/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public boolean hasPathSum(TreeNode root, int targetSum) {
        boolean result;
        result = traversal(root,0,targetSum);
        return result;
    }

    public boolean traversal(TreeNode node, int temp_sum, int targetSum){
        if(node == null){
            return false;
        }
        if(node.left == null && node.right == null){
            if(temp_sum + node.val == targetSum) { return true;}
            else{return false;}
        }

       if(traversal(node.left,temp_sum + node.val,targetSum) == true){
           return true;
       };
        if(traversal(node.right,temp_sum + node.val,targetSum) == true){
            return true;
        }

        return false;
    }
}
